---
name: Home Assistant CI

on:
  push:
  pull_request:

jobs:
  pre-commit:
    name: Pre Commit
    runs-on: ubuntu-latest
    steps:
      - name: Checking out code from GitHub
        uses: actions/checkout@v1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install pre-commit
          pip list
          pre-commit --version
      - name: Run pre-commit on all files
        run: |
          pre-commit run --all-files --show-diff-on-failure

  home_assistant_stable:
    needs: pre-commit
    runs-on: ubuntu-latest
    steps:
      - name: Getting your configuration from GitHub
        uses: actions/checkout@v1
      - name: Copy stub files into configuration folder
        run: |
          cp .stubs/secrets.yaml homeassistant/secrets.yaml
          cp .stubs/google_token.json homeassistant/google_token.json
      - name: Home Assistant Version
        uses: "docker://homeassistant/home-assistant:stable"
        with:
          args: |
            python -m homeassistant --version
      - name: Home Assistant Check
        uses: "docker://homeassistant/home-assistant:stable"
        with:
          args: python -m homeassistant --config ./homeassistant/ --script check_config --info all
  home_assistant_beta:
      needs: pre-commit
      runs-on: ubuntu-latest
      steps:
        - name: Getting your configuration from GitHub
          uses: actions/checkout@v1
        - name: Copy stub files into configuration folder
          run: |
            cp .stubs/secrets.yaml homeassistant/secrets.yaml
            cp .stubs/google_token.json homeassistant/google_token.json
        - name: Home Assistant Version
          uses: "docker://homeassistant/home-assistant:beta"
          with:
            args: |
              python -m homeassistant --version
        - name: Home Assistant Check
          uses: "docker://homeassistant/home-assistant:beta"
          with:
            args: python -m homeassistant --config ./homeassistant/ --script check_config --info all

  ansible_provision:
    needs: pre-commit
    runs-on: ubuntu-latest
    steps:
      - name: Checking out code from GitHub
        uses: actions/checkout@v1
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install ansible
          ansible-galaxy install git+https://github.com/c0sco/ansible-modules-bitwarden
          pip list
      - name: Copy variables
        run: |
          cp provision/variables/default.yaml.stub provision/variables/default.yaml
          cp provision/inventory.stub provision/inventory
      - name: Run ansible syntax check
        run: |
          cd provision && ansible-playbook playbook.yaml -i inventory --syntax-check
  esphome:
    runs-on: ubuntu-latest
    needs: [pre-commit]
    steps:
      - name: Getting your configuration from GitHub
        uses: actions/checkout@v1
      - name: Copy stub files into configuration folder
        run: cp -R ./.stubs/esphome_secrets.yaml ./esphome/secrets.yaml
      - name: ESPHome Check
        uses: "docker://esphome/esphome:latest"
        with:
          entrypoint: "bash"
          args: |
            for file in $(find ./config/esphome -type f -name "*.yaml" -not -name "secrets.yaml"); do esphome "${file}" config; done

  ansible_tasmota:
    needs: pre-commit
    runs-on: ubuntu-latest
    steps:
      - name: Checking out code from GitHub
        uses: actions/checkout@v1
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install ansible
          ansible-galaxy install git+https://github.com/c0sco/ansible-modules-bitwarden
          pip list
      - name: Copy variables
        run: |
          cp tasmota/default.yaml.stub tasmota/default.yaml
      - name: Run ansible syntax check
        run: |
          cd tasmota && ansible-playbook playbook.yaml -i inventory --syntax-check
